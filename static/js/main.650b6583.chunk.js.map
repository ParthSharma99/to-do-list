{"version":3,"sources":["Components/list_item.jsx","Components/list.jsx","App.js","reportWebVitals.js","index.js"],"names":["List_item","props","useState","text","itemText","setItemText","editMode","setEditMode","inputText","setInputText","delete_item","className","value","onChange","event","target","onClick","edit_item","id","List","list","setList","splice","newText","console","log","map","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"8NAgDeA,EA9CG,SAACC,GAAW,IAAD,EACKC,mBAASD,EAAME,MADpB,mBACpBC,EADoB,KACVC,EADU,OAEKH,oBAAS,GAFd,mBAEpBI,EAFoB,KAEVC,EAFU,OAGOL,mBAASD,EAAME,MAHtB,mBAGpBK,EAHoB,KAGTC,EAHS,KAKvBC,EAAcT,EAAMS,YAExB,OACE,8BACGJ,EACC,sBAAKK,UAAU,oBAAf,UACE,uBACEC,MAAOJ,EACPK,SAAU,SAACC,GAAD,OAAWL,EAAaK,EAAMC,OAAOH,UAEjD,qBAAKD,UAAU,eAAf,SACE,qBAAKA,UAAU,qBAAf,SACE,wBACEK,QAAS,WACPf,EAAMgB,UAAUhB,EAAMiB,IACtBX,GAAY,GACZF,EAAYG,IAJhB,yBAaN,sBAAKG,UAAU,oBAAf,UACE,qBAAKA,UAAU,mBAAf,SAAmCP,IACnC,sBAAKO,UAAU,eAAf,UACE,qBAAKA,UAAU,qBAAf,SACE,wBAAQK,QAAS,kBAAMN,EAAYT,EAAMiB,KAAzC,sBAEF,qBAAKP,UAAU,mBAAf,SACE,wBAAQK,QAAS,kBAAMT,GAAY,IAAnC,6BCiBCY,EArDF,SAAClB,GAAW,IAAD,EACEC,mBAAS,IADX,mBACfkB,EADe,KACTC,EADS,OAEYnB,mBAAS,IAFrB,mBAEfM,EAFe,KAEJC,EAFI,KAQhBC,EAAc,SAACQ,GAGnBE,EAAKE,OAAOJ,EAAI,GAChBG,EAAQ,YAAID,KAGRH,EAAY,SAACC,EAAIK,GACrBH,EAAKE,OAAOJ,EAAI,EAAGK,GACnBF,EAAQ,YAAID,IACZI,QAAQC,IAAIL,IAGd,OACE,sBAAKT,UAAU,eAAf,UACGS,EAAKM,KAAI,SAACvB,EAAMe,GACf,OACE,cAAC,EAAD,CACEf,KAAMA,EACNO,YAAaA,EACbQ,GAAIA,EAEJD,UAAWA,GADNC,MAMX,sBAAKP,UAAU,mBAAf,UACE,uBACEC,MAAOJ,EACPK,SAAU,SAACC,GAAD,OAAWL,EAAaK,EAAMC,OAAOH,UAEjD,wBACEI,QAAS,WArCA,IAACb,IAsCCK,EArCjBa,EAAQ,GAAD,mBAAKD,GAAL,CAAWjB,KAsCVM,EAAa,KAHjB,6BC9BOkB,MATf,WAEE,OACE,8BACE,cAAC,EAAD,OCISC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.650b6583.chunk.js","sourcesContent":["import { React, useState } from \"react\";\r\n\r\nconst List_item = (props) => {\r\n  const [itemText, setItemText] = useState(props.text);\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [inputText, setInputText] = useState(props.text);\r\n\r\n  let delete_item = props.delete_item;\r\n\r\n  return (\r\n    <div>\r\n      {editMode ? (\r\n        <div className=\"list-item-wrapper\">\r\n          <input\r\n            value={inputText}\r\n            onChange={(event) => setInputText(event.target.value)}\r\n          />\r\n          <div className=\"item-buttons\">\r\n            <div className=\"item-delete-button\">\r\n              <button\r\n                onClick={() => {\r\n                  props.edit_item(props.id);\r\n                  setEditMode(false);\r\n                  setItemText(inputText);\r\n                }}\r\n              >\r\n                Save\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"list-item-wrapper\">\r\n          <div className=\"item-description\">{itemText}</div>\r\n          <div className=\"item-buttons\">\r\n            <div className=\"item-delete-button\">\r\n              <button onClick={() => delete_item(props.id)}>Delete</button>\r\n            </div>\r\n            <div className=\"item-edit-button\">\r\n              <button onClick={() => setEditMode(true)}>Edit</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default List_item;\r\n","import { React, useState } from \"react\";\r\nimport List_item from \"./list_item\";\r\n\r\nconst List = (props) => {\r\n  const [list, setList] = useState([]);\r\n  const [inputText, setInputText] = useState(\"\");\r\n\r\n  const add_item = (text) => {\r\n    setList([...list, text]);\r\n  };\r\n\r\n  const delete_item = (id) => {\r\n    // let temp = list;\r\n    // temp.splice(id, 1);\r\n    list.splice(id, 1);\r\n    setList([...list]);\r\n  };\r\n\r\n  const edit_item = (id, newText) => {\r\n    list.splice(id, 1, newText);\r\n    setList([...list]);\r\n    console.log(list);\r\n  };\r\n\r\n  return (\r\n    <div className=\"list-wrapper\">\r\n      {list.map((text, id) => {\r\n        return (\r\n          <List_item\r\n            text={text}\r\n            delete_item={delete_item}\r\n            id={id}\r\n            key={id}\r\n            edit_item={edit_item}\r\n          />\r\n        );\r\n      })}\r\n\r\n      <div className=\"add-item-wrapper\">\r\n        <input\r\n          value={inputText}\r\n          onChange={(event) => setInputText(event.target.value)}\r\n        />\r\n        <button\r\n          onClick={() => {\r\n            add_item(inputText);\r\n            setInputText(\"\");\r\n          }}\r\n        >\r\n          Add Item\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import './App.css';\nimport {React} from 'react';\nimport List from './Components/list';\n\nfunction App() {\n\n  return (\n    <div>\n      <List/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}